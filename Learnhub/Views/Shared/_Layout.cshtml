@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var backgroundImagePath = HttpContextAccessor.HttpContext?.Session.GetString("BackgroundImagePath") ?? "";
    var userId = HttpContextAccessor.HttpContext?.Session.GetString("UserId");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Learnhub</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Learnhub.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site-shared.css" />

    <style>
        body {
            background-image: url('@backgroundImagePath');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
        }

        .content-wrapper {
            background-color: rgba(255, 255, 255, 0.5);
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            margin-top: 20px;
            margin-bottom: 30px;
        }

        /* Toggle button */
        #spinnerToggleBtn {
            position: fixed;
            bottom: 1rem;
            left: 1rem;
            z-index: 1040;
        }

        /* Picker panel */
        #spinner-picker {
            position: fixed;
            bottom: 4rem;
            left: 1rem;
            background: rgba(255,255,255,0.9);
            padding: .75rem 1rem;
            border-radius: .5rem;
            box-shadow: 0 2px 6px rgba(0,0,0,0.2);
            display: none;
            z-index: 1040;
        }

        /* Cursor spinner container */
        #cursor-spinner {
            position: fixed;
            pointer-events: none;
            top: 0;
            left: 0;
            transform: translate(-50%, -50%);
            z-index: 1050;
            display: none;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom shadow-sm mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Learnhub</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                        data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between align-items-center">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Index">Home</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Privacy">Privacy</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Forum" asp-action="Index">Forum</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Complaint" asp-action="Index">Complaint</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Personalization" asp-action="Index">Personalization</a></li>
                    </ul>
                    <form class="d-flex me-3" asp-controller="Search" asp-action="Results" method="get">
                        <input class="form-control me-2" type="search" name="query" placeholder="Enter keywords to search" />
                        <button class="btn btn-outline-success" type="submit">Search</button>
                    </form>
                    @if (string.IsNullOrEmpty(userId))
                    {
                        <ul class="navbar-nav me-3">
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a></li>
                        </ul>
                    }
                    @if (!string.IsNullOrEmpty(userId))
                    {
                        var avatarUrl = $"/images/{userId}_avatar.png?ts={DateTime.Now.Ticks}";
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle p-0" href="#" id="avatarDropdown" role="button"
                                   data-bs-toggle="dropdown">
                                    <img src="@avatarUrl" onerror="this.src='/images/default-avatar.png';"
                                         class="rounded-circle" width="35" height="35" alt="User" />
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile">Profile</a></li>
                                    <li><a class="dropdown-item" asp-controller="Account" asp-action="Settings">Settings</a></li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li><form asp-controller="Account" asp-action="Logout" method="post"><button type="submit" class="dropdown-item">Logout</button></form></li>
                                </ul>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <div class="content-wrapper">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- Toggle and Picker -->
    <button id="spinnerToggleBtn" class="btn btn-primary btn-sm">Cursor Animation</button>
    <div id="spinner-picker">
        <label class="form-label mb-1">Select Effect:</label>
        <select id="spinnerSelect" class="form-select form-select-sm">
            <option value="">None</option>
            <option value="flower-spinner">Flower</option>
            <option value="pixel-spinner">Pixel</option>
            <option value="orbit-spinner">Orbit</option>
            <option value="atom-spinner">Atom</option>
            <option value="fingerprint-spinner">Fingerprint</option>
            <option value="semipolar-spinner">Semipolar</option>
        </select>
    </div>

    <div id="cursor-spinner"></div>

    <footer class="border-top footer text-muted">
        <div class="container">&copy; 2025 - Learnhub - <a asp-controller="Home" asp-action="Privacy">Privacy</a></div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        (function() {
            const toggleBtn = document.getElementById('spinnerToggleBtn');
            const picker = document.getElementById('spinner-picker');
            const select = document.getElementById('spinnerSelect');
            const cursorDiv = document.getElementById('cursor-spinner');
            let currentClass = '';

            // Initialize from localStorage
            document.addEventListener('DOMContentLoaded', () => {
                const saved = localStorage.getItem('cursorSpinner') || '';
                select.value = saved;
                applySpinner(saved);
            });

            toggleBtn.addEventListener('click', () => {
                picker.style.display = picker.style.display === 'block' ? 'none' : 'block';
            });

            select.addEventListener('change', () => {
                const val = select.value;
                localStorage.setItem('cursorSpinner', val);
                applySpinner(val);
            });

            function applySpinner(val) {
                cursorDiv.innerHTML = '';
                cursorDiv.className = '';
                document.removeEventListener('mousemove', followMouse);
                if (val) {
                    let html = '';
                    switch (val) {
                        case 'flower-spinner':
                            html = '<div class="dots-container smaller-dot"></div><div class="dots-container bigger-dot"></div>';
                            break;
                        case 'pixel-spinner':
                            html = '<div class="pixel-spinner-inner"></div>';
                            break;
                        case 'orbit-spinner':
                            html = '<div class="orbit"></div><div class="orbit"></div><div class="orbit"></div>';
                            break;
                        case 'atom-spinner':
                            html = '<div class="spinner-line"></div><div class="spinner-line"></div><div class="spinner-line"></div>';
                            break;
                        case 'fingerprint-spinner':
                            for (let i=1; i<=9; i++) html += `<div class="spinner-ring" style="--i:${i};"></div>`;
                            break;
                        case 'semipolar-spinner':
                            html = '<div class="ring"></div><div class="ring"></div><div class="ring"></div><div class="ring"></div><div class="ring"></div>';
                            break;
                    }
                    cursorDiv.innerHTML = html;
                    cursorDiv.className = val;
                    cursorDiv.style.display = 'block';
                    document.addEventListener('mousemove', followMouse);
                } else {
                    cursorDiv.style.display = 'none';
                }
            }

            function followMouse(e) {
                cursorDiv.style.left = e.clientX + 'px';
                cursorDiv.style.top = e.clientY + 'px';
            }
        })();
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
